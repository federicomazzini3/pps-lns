package lns.scenes.game.items

import indigo.*
import indigo.shared.scenegraph.{ Graphic, Shape }
import indigoextras.geometry.{ BoundingBox, Vertex }
import lns.StartupData
import lns.core.Assets.Rooms
import lns.core.anythingAssets.ItemAsset
import lns.scenes.game.anything.{ AnythingView, AnythingViewModel, SimpleAnythingView }

trait ItemView[VM <: AnythingViewModel[ItemModel] | Unit] extends AnythingView[ItemModel, VM]

/**
 * View to draw a item generated by [[ItemModel]]
 */
object ItemView extends ItemView[Unit] with SimpleAnythingView with ItemAsset {

  type View = Group

  def view(contex: FrameContext[StartupData], model: Model, viewModel: ViewModel): View =
    drawItemOnAltar(model.name)
}
