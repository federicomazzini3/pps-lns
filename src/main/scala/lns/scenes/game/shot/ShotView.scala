package lns.scenes.game.shot

import indigo.*
import indigo.shared.scenegraph.Shape
import lns.StartupData
import lns.scenes.game.anything.{ AnythingView, AnythingViewModel, SimpleAnythingView }

trait ShotView[VM <: AnythingViewModel[ShotModel] | Unit] extends AnythingView[ShotModel, VM]

/**
 * View to draw a shot generated by [[FireModel]]
 */
object ShotView extends ShotView[Unit] with SimpleAnythingView with ShotYellow {

  type View = Group

  def view(contex: FrameContext[StartupData], model: Model, viewModel: ViewModel): View =
    drawComponents(List(shot))

  override protected def depth(model: Model): Depth = model.direction.y match {
    case x if x < 0 => super.depth(model)
    case _          => Depth(Int.MinValue)
  }
}
